name: Clippy BSP & HAL code
on: [push]

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - name: Checkout sources
      uses: actions/checkout@v2
    - id: set-matrix
      uses: ./.github/actions/list-BSPs

  build:
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.toolchain == 'nightly' }}
    needs: setup
    strategy:
      matrix: ${{fromJson(needs.setup.outputs.matrix)}}
    steps:
    - name: Checkout sources
      uses: actions/checkout@v2
    - name: Install Rust (thumbv6m)
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.toolchain }}
        override: true
        target: thumbv6m-none-eabi
        components: clippy
    - name: Install Rust (thumbv7em)
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.toolchain }}
        override: true
        target: thumbv7em-none-eabihf
        components: clippy

    - name: Clippy ${{ matrix.bsp }}
      run: |
        set -ex
        cd boards/${{ matrix.bsp }}
        toml_path=boards/${{ matrix.bsp }}
        # disable command workflow processing
        echo "::stop-commands::`echo -n ${{ github.token }} | sha256sum | head -c 64`"
        echo "::set-env name=TOML_PATH::$TOML_PATH"
    - uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --all-features --manifest-path=$TOML_PATH/Cargo.toml
